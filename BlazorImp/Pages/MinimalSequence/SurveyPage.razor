@page "/SurveyPage"
@using Microsoft.EntityFrameworkCore
@using BlazorImp.Models
@inject IDbContextFactory<BlazorImpContext> DbFactory

<div class="main-container">
    <h2>@((MarkupString)Header)</h2>

    <p>@((MarkupString)MainText)</p>

    <label class="vertical-label" for="answer">@Question</label>
    <input type="text" id="answer" name="answer" disabled=@SendingData @bind="@UserAnswer"  @bind:event="oninput"/>
    <button type="button" disabled=@(SendingData || UserAnswer == "") @onclick="ButtonOnClick">Continue</button>
</div>
@code {
    //--------------------------------------------
    // Properties that map to UI elements directly
    //--------------------------------------------
    private string Header { get; set; } = "Survey page";
    private string MainText { get; set; } = "At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.";
    private string Question { get; set; } = "Question text?";
    private string UserAnswer { get; set; } = "";

    //-------------------------------------
    // Properties that affect UI implicitly
    //-------------------------------------
    private bool SendingData { get; set; } = false;

    //-------------------------------------
    // Properties that are related to logic
    //-------------------------------------
    [Parameter]
    public SurveyPageModel Model { get; set; }
    [Parameter]
    public SessionInfo SessionInfo { get; set; }
    [Parameter]
    public EventCallback<Task> GoToNextStep { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        // Map Model's data to UI
        Header = Model.Header;
        MainText = Model.MainText;
        Question = Model.Question;
        UserAnswer = "";
    }

    private async Task ButtonOnClick()
    {
        // TODO: Find if there is a construction for this similar to 'using' keyword
        SendingData = true;

        SurveyAnswer answer = new()
        {
            CourseID = SessionInfo.CourseID,
            SurveyPageModelID = Model.SurveyPageModelID,
            UserID = SessionInfo.UserID.GetValueOrDefault(),
            Answer = UserAnswer,
        };

        var context = DbFactory.CreateDbContext();
        context.SurveyAnswers.Add(answer);
        await context.SaveChangesAsync();

        await GoToNextStep.InvokeAsync();

        SendingData = false;
    }
}
